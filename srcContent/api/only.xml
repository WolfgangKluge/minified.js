<?xml version="1.0" encoding="UTF-8"?>
<!--
   Auto-generated using docbuilder.js. Do not edit manually. 
-->
<page xmlns="http://tjansen.de/minifiedPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://tjansen.de/minifiedPage ../schemas/page.xsd ">
	<title>.only() - Minified.js</title>
	<section>reference</section>
	<externalCss>../css/reference.css</externalCss>
	<main><![CDATA[
<div id="docmain"><p class="docHead"><a href="index.html" class="backOverview">back to Overview</a></p>
<h2><a name="doc-only">.only()</a></h2>
<div class="summary">Returns a new list that contains only those elements that match the given selector.</div>

<h4>Syntax Variants</h4>
<div class="syntaxVariant">
<div class="syntax">list.only()</div>
<div class="syntax">list.only(selector)</div>
</div>

<h4>Parameters</h4>
<dl class="params">
<dt id="only_selector" class=""><a name="only_selector"><var>selector (optional)</var></a></dt>
<dd class="">any selector valid for <code><a href='dollar.html'>$()</a></code>, including CSS selectors and lists. Alternatively you can pass
a <code>function(node)</code> returning <var>true</var> for those nodes that are approved.
<br/>Selectors are optimized for '*', '.classname', 'tagname' and 'tagname.classname'. The performance for other selectors
is relative to the number of matches for the selector in the document. Default is '*', which keeps all elements
(but no other nodes such as text nodes).</dd>
<dt id="only_RETURN" class="returnValue inSyntax0 inSyntax1"><a name="only_RETURN"><var>(return value)</var></a></dt>
<dd class="inSyntax0 inSyntax1">a new list containing only elements matched by the selector.</dd>
</dl>

<h4>Description</h4>
<div class="description"><p>Returns a new list that contains only those elements that match the given selector.</p><p>Please note that this method is optimized for the four simple selector forms '*', '.classname', 'tagname'
and 'tagname.classname'. If you use any other kind of selector, please be aware that selectors that match
many elements can be slow.</p><p></p></div>

<div class="examples">
<h4>Example</h4>
<div class="example"><p>Returns only those list elements have the classes 'listItem' and 'myClass':
<pre>
var myLis = $('li.listItem').only('.myClass');
</pre>
</p></div>
<h4>Example</h4>
<div class="example"><p>Returns a list of all forms:
<pre>
var forms = $('#content *').only('form');
</pre>
</p></div>
</div>


<p class="docFoot"><a href="index.html" class="backOverview">back to Overview</a></p>
</div>
<div id="toc"><h3>Functions</h3><ul><li><a href="dollar.html">$()</a>
</li><li><a href="dollardollar.html">$$()</a>
</li><li><a href="getcookie.html">$.getCookie()</a>
</li><li><a href="loop.html">$.loop()</a>
</li><li><a href="off.html">$.off()</a>
</li><li><a href="parsejson.html">$.parseJSON()</a>
</li><li><a href="ready.html">$.ready()</a>
</li><li><a href="request.html">$.request()</a>
</li><li><a href="setcookie.html">$.setCookie()</a>
</li><li><a href="tojson.html">$.toJSON()</a>
</li><li><a href="add.html">.add()</a>
</li><li><a href="addafter.html">.addAfter()</a>
</li><li><a href="addbefore.html">.addBefore()</a>
</li><li><a href="addfront.html">.addFront()</a>
</li><li><a href="animate.html">.animate()</a>
</li><li><a href="clone.html">.clone()</a>
</li><li><a href="collect.html">.collect()</a>
</li><li><a href="each.html">.each()</a>
</li><li><a href="fill.html">.fill()</a>
</li><li><a href="filter.html">.filter()</a>
</li><li><a href="find.html">.find()</a>
</li><li><a href="get.html">.get()</a>
</li><li><a href="is.html">.is()</a>
</li><li><a href="length.html">.length</a>
</li><li><a href="on.html">.on()</a>
</li><li><a href="onover.html">.onOver()</a>
</li><li><a href="only.html">.only()</a>
</li><li><a href="remove.html">.remove()</a>
</li><li><a href="replace.html">.replace()</a>
</li><li><a href="select.html">.select()</a>
</li><li><a href="set.html">.set()</a>
</li><li><a href="sub.html">.sub()</a>
</li><li><a href="text.html">.text()</a>
</li><li><a href="toggle.html">.toggle()</a>
</li><li><a href="trav.html">.trav()</a>
</li><li><a href="trigger.html">.trigger()</a>
</li><li><a href="values.html">.values()</a>
</li><li><a href="ee.html">EE()</a>
</li><li><a href="M.html">M</a>
</li><li><a href="list.html">Minified Lists</a>
</li><li><a href="promise.html">Promise</a>
</li><li><a href="error.html">promise.error()</a>
</li><li><a href="then.html">promise.then()</a>
</li><li><a href="require.html">require()</a>
</li><li><a href="/docs/howto.html">How to...</a></li></ul></div>

]]></main>
</page>
