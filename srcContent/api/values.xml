<?xml version="1.0" encoding="UTF-8"?>
<!--
   Auto-generated using docbuilder.js. Do not edit manually. 
-->
<page xmlns="http://tjansen.de/minifiedPage" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://tjansen.de/minifiedPage ../schemas/page.xsd ">
	<title>.values() - Minified.js</title>
	<section>reference</section>
	<externalCss>../css/reference.css</externalCss>
	<main><![CDATA[
<div id="docmain"><p class="docHead"><a href="index.html" class="backOverview">back to Overview</a></p>
<h2><a name="doc-values">.values()</a></h2>
<div class="summary">Creates a name/value map from the given form.</div>

<h4>Syntax Variants</h4>
<div class="syntaxVariant">
<div class="syntax">values()</div>
<div class="syntax">values(dataMap)</div>
</div>

<h4>Parameters</h4>
<dl class="params">
<dt id="values_dataMap" class=""><a name="values_dataMap"><var>dataMap (optional)</var></a></dt>
<dd class="">an optional map to write the values into. If not given, a new empty map will be created</dd>
<dt id="values_RETURN" class="returnValue inSyntax0 inSyntax1"><a name="values_RETURN"><var>(return value)</var></a></dt>
<dd class="inSyntax0 inSyntax1">a map containing name->value pairs as strings. If there is more than one value with the same name,
map value is an array of strings</dd>
</dl>

<h4>Description</h4>
<div class="description"><p>Creates a name/value map from the given form. values() looks at the list's form elements and writes each element's name into the map,
using the element name as key and the element's value as value. If there is more than one value with the same name, the map will contain an array
of values. Form element without value will be written with 'null' as value. Form elements without name will be ignored.</p><p>values() will use all elements in the list that have a name, such as input, textarea and select elements. For form elements in the list, all child form
elements will be serialized.</p><p>The map format returned by values() is exactly the format used by request().</p><p>Please note that when you include an input element more than once, for example by having the input itself and its form in the list, the
value will be included twice in the list.</p><p></p></div>

<div class="examples">
<h4>Example</h4>
<div class="example"><p>Serialize a form and send it as request parameters:
<pre>
$.request('get', '/exampleService', $('#myForm').values(), resultHandler);
</pre>
</p></div>
<h4>Example</h4>
<div class="example"><p>Serialize only some selected input fields:
<pre>
var data = $('#myText, input.myRadios').values();
</pre>
</p></div>
</div>


<p class="docFoot"><a href="index.html" class="backOverview">back to Overview</a></p>
</div>
<div id="toc"><h3>Functions</h3><ul><li><a href="dollar.html">$()</a>
</li><li><a href="dollardollar.html">$$()</a>
</li><li><a href="getcookie.html">$.getCookie()</a>
</li><li><a href="loop.html">$.loop()</a>
</li><li><a href="off.html">$.off()</a>
</li><li><a href="parsejson.html">$.parseJSON()</a>
</li><li><a href="ready.html">$.ready()</a>
</li><li><a href="request.html">$.request()</a>
</li><li><a href="setcookie.html">$.setCookie()</a>
</li><li><a href="tojson.html">$.toJSON()</a>
</li><li><a href="add.html">.add()</a>
</li><li><a href="addafter.html">.addAfter()</a>
</li><li><a href="addbefore.html">.addBefore()</a>
</li><li><a href="addfront.html">.addFront()</a>
</li><li><a href="animate.html">.animate()</a>
</li><li><a href="clone.html">.clone()</a>
</li><li><a href="collect.html">.collect()</a>
</li><li><a href="each.html">.each()</a>
</li><li><a href="fill.html">.fill()</a>
</li><li><a href="filter.html">.filter()</a>
</li><li><a href="find.html">.find()</a>
</li><li><a href="get.html">.get()</a>
</li><li><a href="is.html">.is()</a>
</li><li><a href="length.html">.length</a>
</li><li><a href="on.html">.on()</a>
</li><li><a href="onover.html">.onOver()</a>
</li><li><a href="only.html">.only()</a>
</li><li><a href="remove.html">.remove()</a>
</li><li><a href="replace.html">.replace()</a>
</li><li><a href="select.html">.select()</a>
</li><li><a href="set.html">.set()</a>
</li><li><a href="sub.html">.sub()</a>
</li><li><a href="text.html">.text()</a>
</li><li><a href="toggle.html">.toggle()</a>
</li><li><a href="trav.html">.trav()</a>
</li><li><a href="trigger.html">.trigger()</a>
</li><li><a href="values.html">.values()</a>
</li><li><a href="ee.html">EE()</a>
</li><li><a href="M.html">M</a>
</li><li><a href="list.html">Minified Lists</a>
</li><li><a href="promise.html">Promise</a>
</li><li><a href="always.html">promise.always()</a>
</li><li><a href="error.html">promise.error()</a>
</li><li><a href="then.html">promise.then()</a>
</li><li><a href="require.html">require()</a>
</li><li><a href="/docs/howto.html">How to...</a></li></ul></div>

]]></main>
</page>
